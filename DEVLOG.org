* Requirements
As stated in the README, the curation process has five steps:
1. data aggregation
2. sanitization - removal of mixtures, inorganic compounds, and salts
3. standardization of structures
4. removal of duplicates
5. manual review

Want to make a program that is modular, so that you can load just the structure
standardization piece (for example) and work with that in a Jupyter
notebook. Need to repackage for this.

Also want to bundle a commandline interface that will take in a file or a list
of files are perform all steps end-to-end, outputting the cleaned results and a
list of compounds requiring manual review.

Want to support a good range of file types.

Definitely need to have good test coverage for a project like this.

* Flow of current program

* Dependencies
Libraries used in this project:
- The [[https://www.rdkit.org/docs/GettingStartedInPython.html][RDKit]], an open-source toolkit for cheminformatics.
- [[https://molvs.readthedocs.io/en/latest/][MolVS]], a molecule validation and standardization tool built using RDKit
- [[https://pandas.pydata.org/docs/][Pandas]], for the majority of the dataset manipulation
- [[https://click.palletsprojects.com/en/7.x/][Click]], the "command line interface creation kit", for creating the cli tool
- [[https://www.sphinx-doc.org/en/master/][Sphinx]], a tool for creating documentation

Dependencies are handled by [[https://setuptools.readthedocs.io/en/latest/setuptools.html#basic-use][Setuptools]]. Built and managed with [[https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html][conda]].

Project structure in line with official Python recommendations found [[https://packaging.python.org/overview/#][here]] and
[[https://docs.python-guide.org/writing/structure/#setup-py][here]].

Test info coming soon.
https://docs.python-guide.org/writing/tests/
https://docs.python.org/3/library/unittest.html

* Tasks for 0.1.0 [0/8]
** TODO Set up `conda-build` build process

- Note taken on [2020-05-10 Sun 12:44] \\
  [[https://www.youtube.com/watch?v=Kamld5Z-xx0][Michael Sarahan - Making packages and packaging "just work"]]
  [[https://python-packaging-tutorial.readthedocs.io/en/latest/conda.html][Guide to building `conda` packages]]

** TODO Document build process in CONTRIBUTING.rst
So it is reproducible and people can easily get the source to develop on.

** TODO Remove hard-coded links in curate.py

** TODO Create CLI
Thinking of calling the program `tbv`

*** TODO COMMENT Get first working example
Want to have an executable that takes in a filename or list of filenames and
executes the entire curation process as currently defined in curate.py.

#+begin_src sh
  tbv curate filename1 filename2 ...
#+end_src

*** TODO Add option to specify output location
#+begin_src sh
  tbv curate -o output_dir filename1 filename2
#+end_src

*** TODO Add `verbose` options
How much logging do we output about what is going on?

#+begin_src sh
  tbv curate -v -o output_dir filename1 filename2
#+end_src

*** TODO Add commands for each module
Keep `curate` for running the full process

#+begin_src sh
  tbv curate [OPTIONS] filename1 filename2 ...
  tbv sanitize [OPTIONS] filename1 ...
  tbv standardize [OPTIONS] filename1 ...
  tbv dedup [OPTIONS] filename1 ...
#+end_src

** TODO Add overview documentation

** TODO Add documentation for functions in curate.py

** TODO Refactor curate.py into individual modules

** TODO Add tests for modules

* Log
** 10 May 2020
- GOAL: remove hard-coded links; that means filenames and output_dir in
  ~main()~ - potentially targets as well?
- Learning more about how to use conda for development
  - Added ~conda-build~ to env
  - Created conda.recipe/ dir and ~meta.yaml~ within
- Added Tasks section to DEVLOG with goals for an initial beta-release version
  of the package.

** 9 May 2020
- Installed ~conda~, version 4.8.2
- Created environment ~chem_cur_env~ locally using ~conda create --prefix
  ./chem_cur-env~
- Installed packages ~pandas~, ~rdkit~, and ~molvs~
- Created simple directory structure:
  + README (unchanged)
  + Makefile (currently empty)
  + setup.py
  + tbv (cli for project, currently empty)
  + chemical_curation
    + __init__.py (empty)
    + curate.py (existing file, unchanged)
  + docs
  + tests
    + context.py (import context for tests)
- Installed package ~click~ for creating a simpe CLI tool, ~tbv~
- Created setup.py
- Installed package ~sphinx~ for easily creating documentation; ran
  ~sphinx-quickstart~ in /docs

